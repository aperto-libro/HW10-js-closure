console.log('------------- # 4');

function sum(x) {
  return function (y) {
    return x + y;
  };
}

const sum1 = sum(1);

console.log(sum1(2));
console.log(sum(1)(2));

console.log('------------- # 5');

/*
Вариант 1. Объявление переменной через let
Переменная var объявлена глобально. Лексическое окружение создается 1 раз и в переменную i
будет записано последнее значение, которое было присвоено в цикле.
Чтобы исправить ошибку нам нужно переменную i объявить через let, тогда она будет локальной
и создавать привязку при каждом вызове функции.
Чтобы выводились значения от 1 до 10 нужно либо в условии цикла изменить let i = 1; i <= 10.
Либо выводить в console.log(i + 1).
*/

for (let i = 1; i <= 10; i++) {
  setTimeout(function () {
    console.log(i);
  }, 0);
}

/*
Вариант 2. Самовызывающаяся функция.
Нужно написать самовызывающуюся функцию внутри цикла, которая будет создавать на каждой
итерации свое лексическое окружение.
Чтобы выводились значения от 1 до 10 нужно либо в условии цикла изменить var i = 1; i <= 10.
Либо выводить в console.log(index + 1).
*/

for (var i = 0; i < 10; i++) {
  (function () {
    let index = i;
    setTimeout(function () {
      console.log(index + 1);
    }, 0);
  })();
}
